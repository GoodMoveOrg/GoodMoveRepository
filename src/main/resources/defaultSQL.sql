-- SQL 1.2 ver 05/23
/*
 * 디폴트 SQL
 * 1.2 컬럼 오류 수정
 */
-- DROP ALL
DROP TABLE APPLICATION;
DROP TABLE TRANSACTION;
DROP TABLE G_PRODUCT;
DROP TABLE LOC_COMMENT;
DROP TABLE G_BOARD;
DROP TABLE GD_MEMBER;
-- TABLES
-- 회원 테이블
CREATE TABLE GD_MEMBER(
	ID VARCHAR2(30) PRIMARY KEY,
	NAME VARCHAR2(18) NOT NULL,
	PASSWORD VARCHAR2(30) NOT NULL,
	ADDR VARCHAR2(100) NOT NULL,
	ADDR_DETAIL VARCHAR2(100) NOT NULL,
	TEL VARCHAR2(100) NOT NULL,
	JOB VARCHAR2(18) NOT NULL,
	DELETEMEMBER VARCHAR2(100) DEFAULT 'TRUE'
);
INSERT INTO GD_MEMBER (ID,PASSWORD,NAME,ADDR,ADDR_DETAIL,TEL,JOB)
		VALUES('JAVA','1234','아이유','경기','판교','01085175486','학생');

		UPDATE GD_MEMBER SET deletemember='TRUE' WHERE ID='JAVA' AND PASSWORD='1234';
-- 물려줄 물건 게시 단위 테이블
CREATE TABLE G_BOARD(
	BNO NUMBER PRIMARY KEY,
	TITLE VARCHAR2(50) NOT NULL,
	HIT NUMBER NOT NULL,
	TIME_POSTED DATE NOT NULL,
	ID VARCHAR2(30) NOT NULL,
	ADDR VARCHAR2(50) NOT NULL,
	BCONTENT CLOB NOT NULL,
	THUMBPATH VARCHAR2(100) NOT NULL,
	CONSTRAINT FK_BD_ID FOREIGN KEY(ID) REFERENCES GD_MEMBER ON DELETE CASCADE
);

-- 지역 후기 테이블
CREATE TABLE LOC_COMMENT(
	CNO NUMBER PRIMARY KEY,
	TITLE VARCHAR2(50) NOT NULL,
	HIT NUMBER NOT NULL,
	TIME_POSTED DATE NOT NULL,
	ADDR VARCHAR2(100) NOT NULL,
	ID VARCHAR2(30) NOT NULL,
	CONTENT CLOB NOT NULL,
	CONSTRAINT FK_COM_ID FOREIGN KEY(ID) REFERENCES GD_MEMBER ON DELETE CASCADE
);

-- 물려줄 물건 테이블
CREATE TABLE G_PRODUCT(
	PNO NUMBER PRIMARY KEY,
	PTITLE VARCHAR2(50) NOT NULL,
	BNO NUMBER  NOT NULL,
	KIND VARCHAR2(50) NOT NULL,
	PCONTENT VARCHAR2(50) NOT NULL,
	IMG_PATH VARCHAR2(100) NOT NULL,
	CONSTRAINT FK_BNO FOREIGN KEY(BNO) REFERENCES G_BOARD ON DELETE CASCADE
);

-- 신청 내역 테이블
CREATE TABLE TRANSACTION(
	TNO NUMBER PRIMARY KEY,
	ID VARCHAR2(30) NOT NULL,
	CONSTRAINT FK_TRAN_ID FOREIGN KEY(ID) REFERENCES GD_MEMBER ON DELETE CASCADE
);

-- 신청서 테이블
CREATE TABLE APPLICATION(
	ANO NUMBER PRIMARY KEY,
	REASON VARCHAR2(100) NOT NULL,
	ID VARCHAR2(30) NOT NULL,
	CONSTRAINT FK_APP_ID FOREIGN KEY(ID) REFERENCES GD_MEMBER ON DELETE CASCADE
);


-- SEQUENCES
DROP SEQUENCE B_SEQ;
DROP SEQUENCE T_SEQ;
DROP SEQUENCE P_SEQ;
DROP SEQUENCE A_SEQ;
DROP SEQUENCE C_SEQ;
DROP SEQUENCE CR_SEQ;
-- B : BOARD / T : TRANSACTION / P : PRODUCT / A : APPLICATION / C : COMMENT / CR: COMMENT_REPLY
CREATE SEQUENCE B_SEQ;
CREATE SEQUENCE T_SEQ;
CREATE SEQUENCE P_SEQ;
CREATE SEQUENCE A_SEQ;
CREATE SEQUENCE C_SEQ;
CREATE SEQUENCE CR_SEQ;
-- SELECT
SELECT * FROM GD_MEMBER;
SELECT * FROM LOC_COMMENT;

-- TEST MEMBER
INSERT INTO GD_MEMBER(ID, NAME, PASSWORD, ADDR, ADDR_DETAIL, TEL, JOB) VALUES('java', '딘딘', '1234', '경기도 성남시 분당구', '삼평동 670','01012345678','취준생');

-- TEST COMMENT
insert into LOC_COMMENT(CNO, TITLE, HIT, TIME_POSTED, ADDR, ID, CONTENT) VALUES(C_SEQ.nextval, 'test1', '0', sysdate, '경기도 성남시 분당구', 'java', '내용');
insert into LOC_COMMENT(CNO, TITLE, HIT, TIME_POSTED, ADDR, ID, CONTENT) VALUES(C_SEQ.nextval, 'test2', '0', sysdate, '경기도 광주시 회덕동', 'java', '내용');

select * from (select cno, title, hit, time_posted, addr, id, content, row_number() over(order by cno desc) as rnumber from
		loc_comment) where rnumber between 1 and 5;
		
select * from LOC_COMMENT;


--TEST LOC_COMMENT_COMMENT
DROP TABLE LOC_COMMENT_REPLY;

CREATE TABLE LOC_COMMENT_REPLY(
	RNO NUMBER PRIMARY KEY,
	CNO NUMBER NOT NULL,
	ID VARCHAR2(30) NOT NULL,
	NAME VARCHAR2(30) NOT NULL,
	TIME_POSTED DATE NOT NULL,
	PARENT NUMBER DEFAULT 0,
	CONTENT CLOB NOT NULL,
	GNO NUMBER NOT NULL,
	DEPT NUMBER DEFAULT 0,
	ORDER_NO NUMBER DEFAULT 1,
	CONSTRAINT FK_CNO FOREIGN KEY(CNO) REFERENCES LOC_COMMENT ON DELETE CASCADE,
	CONSTRAINT FK_MEMBER_ID FOREIGN KEY(ID) REFERENCES GD_MEMBER ON DELETE CASCADE
);
SELECT * FROM LOC_COMMENT_REPLY;
INSERT INTO LOC_COMMENT_REPLY(RNO, CNO, ID, NAME,TIME_POSTED, PARENT, CONTENT, GNO, DEPT, ORDER_NO)
VALUES(CR_SEQ.NEXTVAL,1,'java','딘딘',sysdate,0,'일빠1',1,0,1);
INSERT INTO LOC_COMMENT_REPLY(RNO, CNO, ID, NAME,TIME_POSTED, PARENT, CONTENT, GNO, DEPT, ORDER_NO)
VALUES(CR_SEQ.NEXTVAL,1,'java','딘딘',sysdate,0,'이빠2',2,0,1);
INSERT INTO LOC_COMMENT_REPLY(RNO, CNO, ID, NAME,TIME_POSTED, PARENT, CONTENT, GNO, DEPT, ORDER_NO)
VALUES(CR_SEQ.NEXTVAL,1,'java','딘딘',sysdate,0,'삼빠3',3,0,1);
INSERT INTO LOC_COMMENT_REPLY(RNO, CNO, ID, NAME,TIME_POSTED, PARENT, CONTENT, GNO, DEPT, ORDER_NO)
VALUES(CR_SEQ.NEXTVAL,1,'java','딘딘',sysdate,1,'새치기',1,1,2);


	SELECT rno,cno,id,name,TO_CHAR(TIME_POSTED,'YYYY.MM.DD HH24:MI') as time_posted,
	parent,content,gno,dept,order_no 
	FROM LOC_COMMENT_REPLY WHERE cno=1 ORDER BY GNO ASC