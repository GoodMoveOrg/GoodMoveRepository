<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="comment">
	<select id="getTotalContentCount" resultType="int">
		select count(*)
		from loc_comment
	</select>
	<select id="getCommentList" resultType="commentVO"
		parameterType="pagingBean">
		select * from (select cno, title, hit, to_char(time_posted,'YYYY.MM.DD HH:mm:ss') as
		time_posted, addr, id, content, row_number() over(order by cno desc) as rnum from
		loc_comment) where rnum between #{startRowNumber} and #{endRowNumber}
	</select>
	<select id="showComment" resultType="commentVO" parameterType="int">
		select cno, title, hit, to_char(time_posted,'YYYY.MM.DD HH:mm:ss') as time_posted, addr, id, content
		from loc_comment where cno=#{value}
	</select>
	<update id="updateCount" parameterType="int">
		update loc_comment
		set hit=hit+1 where cno=#{value}
	</update>
	<update id="commentUpdate" parameterType="commentVO">
		update loc_comment
		set
		title=#{title},content=#{content}, addr=#{addr}
		where cno=#{cno}
	</update>
	<insert id="commentRegister" parameterType="commentVO">
	<selectKey keyProperty="cno" resultType="String" order="BEFORE">
			select C_SEQ.nextval from dual
		</selectKey>
		insert into LOC_COMMENT(CNO, TITLE, HIT, TIME_POSTED, ADDR, ID, CONTENT)
		VALUES(#{cno}, #{title}, 0, sysdate, #{addr}, #{id}, #{content})
	</insert>
	<select id="search" resultType="commentVO"   parameterType="hashMap">
		select * from (select cno, title, hit, to_char(time_posted,'YYYY.MM.DD HH:mm:ss') as
		time_posted, addr, id, content, row_number() over(order by cno desc) as rnum from
		loc_comment where upper(${scategory}) like '%' || upper(#{word}) || '%') where rnum between #{startRowNumber} and #{endRowNumber}
	</select>
	<select id="getSearchContentCount" resultType="int" parameterType="searchVO">
		select count(*)
		from loc_comment where upper(${scategory}) like '%' || upper(#{word}) || '%'
	</select>
	<delete id="deleteComment">
		delete from LOC_COMMENT where cno=#{value}
	</delete>
	
	
	
	<!--  commentreply -->
		<select id="getAllCommentReplyList" resultType="commentReplyVO">
	SELECT rno,cno,id,name,TO_CHAR(TIME_POSTED,'YYYY.MM.DD HH24:MI') as time_posted,
	parent,content,gno,depth,order_no 
	FROM LOC_COMMENT_REPLY WHERE cno=#{value} ORDER BY GNO ASC
	</select>
	<insert id="insertNewCommentReply" parameterType="commentReplyVO">
	INSERT INTO LOC_COMMENT_REPLY(RNO, CNO, ID, NAME, TIME_POSTED, PARENT, CONTENT, GNO, depth, ORDER_NO) 
	VALUES(#{rno}, #{cno}, #{id}, #{name}, sysdate, #{parent}, #{content}, #{gno}, #{depth}, #{order_no})
	</insert>
	<select id="getNextReplyNo" resultType="int">
		select CR_SEQ.nextval from dual
	</select>
	<select id="getParentInfo" resultType="commentReplyVO">
	SELECT CNO, depth+1 depth, ORDER_NO+1 ORDER_NO  FROM LOC_COMMENT_REPLY WHERE RNO=#{value}
	</select>
	<select id="getParentsParentId" resultType="int" parameterType="int">
	select PARENT from LOC_COMMENT_REPLY where RNO=#{value}
	</select>
	<delete id="deleteCommentReply" parameterType="int">
	DELETE FROM LOC_COMMENT_REPLY WHERE RNO=#{value}
	</delete>
	<update id="updateCommentReply" parameterType="commentReplyVO">
	UPDATE LOC_COMMENT_REPLY SET content=#{content} where RNO=#{rno}
	</update>
	<select id="getCommentReplyInfoByRNO" parameterType="int" resultType="commentReplyVO">
	SELECT * from LOC_COMMENT_REPLY WHERE RNO=#{value}
	</select>
	<delete id="deleteCommentReplyChild" parameterType="int">
	DELETE FROM LOC_COMMENT_REPLY WHERE GNO=#{value}
	</delete>
</mapper>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















